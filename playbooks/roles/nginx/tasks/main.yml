---
#Â vim: set ft=ansible:

- name: Include OS specific variables
  include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"

- name: Install the nginx repo package
  yum:
    name: "{{ nginx_repo }}"
    state: present
  when: ansible_os_family == "RedHat"

- name: Install the nginx packages
  yum:
    name: "{{ item }}"
    state: present
  with_items: redhat_pkg
  when: ansible_os_family == "RedHat"

- name: Install the nginx packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items: ubuntu_pkg
  when: ansible_os_family == "Debian"

- name: Create the directories for site specific configurations
  file:
    path: "/etc/nginx/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - "sites-available"
    - "sites-enabled"

- name: Copy the nginx configuration file
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify:
   - restart nginx

- name: Copy the nginx default configuration file
  template:
    src: default.conf.j2
    dest: /etc/nginx/conf.d/default.conf

- name: Copy the nginx default site configuration file
  template:
    src: default.j2
    dest: /etc/nginx/sites-available/default

- name: Set default site state
  file:
    path: /etc/nginx/sites-enabled/default
    src: /etc/nginx/sites-available/default
    state: "{{ nginx_default_site | default('link') }}"
  notify:
   - reload nginx
      
- name: Create the site root directories
  file:
    path: "/srv/www/{{ item['server']['file_name'] }}"
    state: directory
    owner: "{{ item['root_owner'] }}"
    group: "{{ item['root_group'] }}"
  with_items: nginx_sites
  when: nginx_sites|lower != 'none'

- name: Create the configurations for sites
  template:
    src: site.j2
    dest: "/etc/nginx/sites-available/{{ item['server']['file_name'] }}"
  with_items: nginx_sites
  when: nginx_sites|lower != 'none'

- name: Create the links to enable site configurations
  file:
    path: "/etc/nginx/sites-enabled/{{ item['server']['file_name'] }}"
    src: "/etc/nginx/sites-available/{{ item['server']['file_name'] }}"
    state: link
  with_items: nginx_sites
  when: nginx_sites|lower != 'none'
  notify:
   - reload nginx

- name: start the nginx service
  service:
    name: nginx
    state: started
    enabled: yes

